//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public DamageContext damage { get; set; }
    public DisplayContext display { get; set; }
    public InputContext input { get; set; }
    public LogContext log { get; set; }
    public NetworkContext network { get; set; }
    public NinjutsuContext ninjutsu { get; set; }
    public PerceptionContext perception { get; set; }
    public TaijutsuContext taijutsu { get; set; }
    public WeaponContext weapon { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { damage, display, input, log, network, ninjutsu, perception, taijutsu, weapon }; } }

    public Contexts() {
        damage = new DamageContext();
        display = new DisplayContext();
        input = new InputContext();
        log = new LogContext();
        network = new NetworkContext();
        ninjutsu = new NinjutsuContext();
        perception = new PerceptionContext();
        taijutsu = new TaijutsuContext();
        weapon = new WeaponContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContextObservers() {
        try {
            CreateContextObserver(damage);
            CreateContextObserver(display);
            CreateContextObserver(input);
            CreateContextObserver(log);
            CreateContextObserver(network);
            CreateContextObserver(ninjutsu);
            CreateContextObserver(perception);
            CreateContextObserver(taijutsu);
            CreateContextObserver(weapon);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
