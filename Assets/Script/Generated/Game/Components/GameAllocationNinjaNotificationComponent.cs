//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity allocationNinjaNotificationEntity { get { return GetGroup(GameMatcher.AllocationNinjaNotification).GetSingleEntity(); } }
    public AllocationNinjaNotificationComponent allocationNinjaNotification { get { return allocationNinjaNotificationEntity.allocationNinjaNotification; } }
    public bool hasAllocationNinjaNotification { get { return allocationNinjaNotificationEntity != null; } }

    public GameEntity SetAllocationNinjaNotification(SCAllocationNinja newValue) {
        if (hasAllocationNinjaNotification) {
            throw new Entitas.EntitasException("Could not set AllocationNinjaNotification!\n" + this + " already has an entity with AllocationNinjaNotificationComponent!",
                "You should check if the context already has a allocationNinjaNotificationEntity before setting it or use context.ReplaceAllocationNinjaNotification().");
        }
        var entity = CreateEntity();
        entity.AddAllocationNinjaNotification(newValue);
        return entity;
    }

    public void ReplaceAllocationNinjaNotification(SCAllocationNinja newValue) {
        var entity = allocationNinjaNotificationEntity;
        if (entity == null) {
            entity = SetAllocationNinjaNotification(newValue);
        } else {
            entity.ReplaceAllocationNinjaNotification(newValue);
        }
    }

    public void RemoveAllocationNinjaNotification() {
        allocationNinjaNotificationEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AllocationNinjaNotificationComponent allocationNinjaNotification { get { return (AllocationNinjaNotificationComponent)GetComponent(GameComponentsLookup.AllocationNinjaNotification); } }
    public bool hasAllocationNinjaNotification { get { return HasComponent(GameComponentsLookup.AllocationNinjaNotification); } }

    public void AddAllocationNinjaNotification(SCAllocationNinja newValue) {
        var index = GameComponentsLookup.AllocationNinjaNotification;
        var component = (AllocationNinjaNotificationComponent)CreateComponent(index, typeof(AllocationNinjaNotificationComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAllocationNinjaNotification(SCAllocationNinja newValue) {
        var index = GameComponentsLookup.AllocationNinjaNotification;
        var component = (AllocationNinjaNotificationComponent)CreateComponent(index, typeof(AllocationNinjaNotificationComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAllocationNinjaNotification() {
        RemoveComponent(GameComponentsLookup.AllocationNinjaNotification);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAllocationNinjaNotification;

    public static Entitas.IMatcher<GameEntity> AllocationNinjaNotification {
        get {
            if (_matcherAllocationNinjaNotification == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AllocationNinjaNotification);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAllocationNinjaNotification = matcher;
            }

            return _matcherAllocationNinjaNotification;
        }
    }
}
