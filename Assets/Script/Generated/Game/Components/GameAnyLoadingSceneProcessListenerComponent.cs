//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyLoadingSceneProcessListenerComponent anyLoadingSceneProcessListener { get { return (AnyLoadingSceneProcessListenerComponent)GetComponent(GameComponentsLookup.AnyLoadingSceneProcessListener); } }
    public bool hasAnyLoadingSceneProcessListener { get { return HasComponent(GameComponentsLookup.AnyLoadingSceneProcessListener); } }

    public void AddAnyLoadingSceneProcessListener(System.Collections.Generic.List<IAnyLoadingSceneProcessListener> newValue) {
        var index = GameComponentsLookup.AnyLoadingSceneProcessListener;
        var component = (AnyLoadingSceneProcessListenerComponent)CreateComponent(index, typeof(AnyLoadingSceneProcessListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyLoadingSceneProcessListener(System.Collections.Generic.List<IAnyLoadingSceneProcessListener> newValue) {
        var index = GameComponentsLookup.AnyLoadingSceneProcessListener;
        var component = (AnyLoadingSceneProcessListenerComponent)CreateComponent(index, typeof(AnyLoadingSceneProcessListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyLoadingSceneProcessListener() {
        RemoveComponent(GameComponentsLookup.AnyLoadingSceneProcessListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyLoadingSceneProcessListener;

    public static Entitas.IMatcher<GameEntity> AnyLoadingSceneProcessListener {
        get {
            if (_matcherAnyLoadingSceneProcessListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyLoadingSceneProcessListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyLoadingSceneProcessListener = matcher;
            }

            return _matcherAnyLoadingSceneProcessListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyLoadingSceneProcessListener(IAnyLoadingSceneProcessListener value) {
        var listeners = hasAnyLoadingSceneProcessListener
            ? anyLoadingSceneProcessListener.value
            : new System.Collections.Generic.List<IAnyLoadingSceneProcessListener>();
        listeners.Add(value);
        ReplaceAnyLoadingSceneProcessListener(listeners);
    }

    public void RemoveAnyLoadingSceneProcessListener(IAnyLoadingSceneProcessListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyLoadingSceneProcessListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyLoadingSceneProcessListener();
        } else {
            ReplaceAnyLoadingSceneProcessListener(listeners);
        }
    }
}
