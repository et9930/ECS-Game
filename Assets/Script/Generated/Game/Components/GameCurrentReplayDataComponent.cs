//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentReplayDataEntity { get { return GetGroup(GameMatcher.CurrentReplayData).GetSingleEntity(); } }
    public CurrentReplayDataComponent currentReplayData { get { return currentReplayDataEntity.currentReplayData; } }
    public bool hasCurrentReplayData { get { return currentReplayDataEntity != null; } }

    public GameEntity SetCurrentReplayData(SCMatchRecord newValue) {
        if (hasCurrentReplayData) {
            throw new Entitas.EntitasException("Could not set CurrentReplayData!\n" + this + " already has an entity with CurrentReplayDataComponent!",
                "You should check if the context already has a currentReplayDataEntity before setting it or use context.ReplaceCurrentReplayData().");
        }
        var entity = CreateEntity();
        entity.AddCurrentReplayData(newValue);
        return entity;
    }

    public void ReplaceCurrentReplayData(SCMatchRecord newValue) {
        var entity = currentReplayDataEntity;
        if (entity == null) {
            entity = SetCurrentReplayData(newValue);
        } else {
            entity.ReplaceCurrentReplayData(newValue);
        }
    }

    public void RemoveCurrentReplayData() {
        currentReplayDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentReplayDataComponent currentReplayData { get { return (CurrentReplayDataComponent)GetComponent(GameComponentsLookup.CurrentReplayData); } }
    public bool hasCurrentReplayData { get { return HasComponent(GameComponentsLookup.CurrentReplayData); } }

    public void AddCurrentReplayData(SCMatchRecord newValue) {
        var index = GameComponentsLookup.CurrentReplayData;
        var component = (CurrentReplayDataComponent)CreateComponent(index, typeof(CurrentReplayDataComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentReplayData(SCMatchRecord newValue) {
        var index = GameComponentsLookup.CurrentReplayData;
        var component = (CurrentReplayDataComponent)CreateComponent(index, typeof(CurrentReplayDataComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentReplayData() {
        RemoveComponent(GameComponentsLookup.CurrentReplayData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentReplayData;

    public static Entitas.IMatcher<GameEntity> CurrentReplayData {
        get {
            if (_matcherCurrentReplayData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentReplayData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentReplayData = matcher;
            }

            return _matcherCurrentReplayData;
        }
    }
}
