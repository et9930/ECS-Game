//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PerceptionPositionAccurateItemListenerComponent perceptionPositionAccurateItemListener { get { return (PerceptionPositionAccurateItemListenerComponent)GetComponent(GameComponentsLookup.PerceptionPositionAccurateItemListener); } }
    public bool hasPerceptionPositionAccurateItemListener { get { return HasComponent(GameComponentsLookup.PerceptionPositionAccurateItemListener); } }

    public void AddPerceptionPositionAccurateItemListener(System.Collections.Generic.List<IPerceptionPositionAccurateItemListener> newValue) {
        var index = GameComponentsLookup.PerceptionPositionAccurateItemListener;
        var component = (PerceptionPositionAccurateItemListenerComponent)CreateComponent(index, typeof(PerceptionPositionAccurateItemListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePerceptionPositionAccurateItemListener(System.Collections.Generic.List<IPerceptionPositionAccurateItemListener> newValue) {
        var index = GameComponentsLookup.PerceptionPositionAccurateItemListener;
        var component = (PerceptionPositionAccurateItemListenerComponent)CreateComponent(index, typeof(PerceptionPositionAccurateItemListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePerceptionPositionAccurateItemListener() {
        RemoveComponent(GameComponentsLookup.PerceptionPositionAccurateItemListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPerceptionPositionAccurateItemListener;

    public static Entitas.IMatcher<GameEntity> PerceptionPositionAccurateItemListener {
        get {
            if (_matcherPerceptionPositionAccurateItemListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PerceptionPositionAccurateItemListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPerceptionPositionAccurateItemListener = matcher;
            }

            return _matcherPerceptionPositionAccurateItemListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddPerceptionPositionAccurateItemListener(IPerceptionPositionAccurateItemListener value) {
        var listeners = hasPerceptionPositionAccurateItemListener
            ? perceptionPositionAccurateItemListener.value
            : new System.Collections.Generic.List<IPerceptionPositionAccurateItemListener>();
        listeners.Add(value);
        ReplacePerceptionPositionAccurateItemListener(listeners);
    }

    public void RemovePerceptionPositionAccurateItemListener(IPerceptionPositionAccurateItemListener value, bool removeComponentWhenEmpty = true) {
        var listeners = perceptionPositionAccurateItemListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePerceptionPositionAccurateItemListener();
        } else {
            ReplacePerceptionPositionAccurateItemListener(listeners);
        }
    }
}
