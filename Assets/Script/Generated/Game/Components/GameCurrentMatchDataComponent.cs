//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentMatchDataEntity { get { return GetGroup(GameMatcher.CurrentMatchData).GetSingleEntity(); } }
    public CurrentMatchDataComponent currentMatchData { get { return currentMatchDataEntity.currentMatchData; } }
    public bool hasCurrentMatchData { get { return currentMatchDataEntity != null; } }

    public GameEntity SetCurrentMatchData(SCMatchData newValue) {
        if (hasCurrentMatchData) {
            throw new Entitas.EntitasException("Could not set CurrentMatchData!\n" + this + " already has an entity with CurrentMatchDataComponent!",
                "You should check if the context already has a currentMatchDataEntity before setting it or use context.ReplaceCurrentMatchData().");
        }
        var entity = CreateEntity();
        entity.AddCurrentMatchData(newValue);
        return entity;
    }

    public void ReplaceCurrentMatchData(SCMatchData newValue) {
        var entity = currentMatchDataEntity;
        if (entity == null) {
            entity = SetCurrentMatchData(newValue);
        } else {
            entity.ReplaceCurrentMatchData(newValue);
        }
    }

    public void RemoveCurrentMatchData() {
        currentMatchDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentMatchDataComponent currentMatchData { get { return (CurrentMatchDataComponent)GetComponent(GameComponentsLookup.CurrentMatchData); } }
    public bool hasCurrentMatchData { get { return HasComponent(GameComponentsLookup.CurrentMatchData); } }

    public void AddCurrentMatchData(SCMatchData newValue) {
        var index = GameComponentsLookup.CurrentMatchData;
        var component = (CurrentMatchDataComponent)CreateComponent(index, typeof(CurrentMatchDataComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentMatchData(SCMatchData newValue) {
        var index = GameComponentsLookup.CurrentMatchData;
        var component = (CurrentMatchDataComponent)CreateComponent(index, typeof(CurrentMatchDataComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentMatchData() {
        RemoveComponent(GameComponentsLookup.CurrentMatchData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentMatchData;

    public static Entitas.IMatcher<GameEntity> CurrentMatchData {
        get {
            if (_matcherCurrentMatchData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentMatchData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentMatchData = matcher;
            }

            return _matcherCurrentMatchData;
        }
    }
}
