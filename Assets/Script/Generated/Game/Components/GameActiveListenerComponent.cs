//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ActiveListenerComponent activeListener { get { return (ActiveListenerComponent)GetComponent(GameComponentsLookup.ActiveListener); } }
    public bool hasActiveListener { get { return HasComponent(GameComponentsLookup.ActiveListener); } }

    public void AddActiveListener(System.Collections.Generic.List<IActiveListener> newValue) {
        var index = GameComponentsLookup.ActiveListener;
        var component = (ActiveListenerComponent)CreateComponent(index, typeof(ActiveListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceActiveListener(System.Collections.Generic.List<IActiveListener> newValue) {
        var index = GameComponentsLookup.ActiveListener;
        var component = (ActiveListenerComponent)CreateComponent(index, typeof(ActiveListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveActiveListener() {
        RemoveComponent(GameComponentsLookup.ActiveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActiveListener;

    public static Entitas.IMatcher<GameEntity> ActiveListener {
        get {
            if (_matcherActiveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActiveListener = matcher;
            }

            return _matcherActiveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddActiveListener(IActiveListener value) {
        var listeners = hasActiveListener
            ? activeListener.value
            : new System.Collections.Generic.List<IActiveListener>();
        listeners.Add(value);
        ReplaceActiveListener(listeners);
    }

    public void RemoveActiveListener(IActiveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = activeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveActiveListener();
        } else {
            ReplaceActiveListener(listeners);
        }
    }
}
