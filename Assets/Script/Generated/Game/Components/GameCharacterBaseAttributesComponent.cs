//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity characterBaseAttributesEntity { get { return GetGroup(GameMatcher.CharacterBaseAttributes).GetSingleEntity(); } }
    public CharacterBaseAttributesComponent characterBaseAttributes { get { return characterBaseAttributesEntity.characterBaseAttributes; } }
    public bool hasCharacterBaseAttributes { get { return characterBaseAttributesEntity != null; } }

    public GameEntity SetCharacterBaseAttributes(System.Collections.Generic.Dictionary<string, Attributes> newDic) {
        if (hasCharacterBaseAttributes) {
            throw new Entitas.EntitasException("Could not set CharacterBaseAttributes!\n" + this + " already has an entity with CharacterBaseAttributesComponent!",
                "You should check if the context already has a characterBaseAttributesEntity before setting it or use context.ReplaceCharacterBaseAttributes().");
        }
        var entity = CreateEntity();
        entity.AddCharacterBaseAttributes(newDic);
        return entity;
    }

    public void ReplaceCharacterBaseAttributes(System.Collections.Generic.Dictionary<string, Attributes> newDic) {
        var entity = characterBaseAttributesEntity;
        if (entity == null) {
            entity = SetCharacterBaseAttributes(newDic);
        } else {
            entity.ReplaceCharacterBaseAttributes(newDic);
        }
    }

    public void RemoveCharacterBaseAttributes() {
        characterBaseAttributesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterBaseAttributesComponent characterBaseAttributes { get { return (CharacterBaseAttributesComponent)GetComponent(GameComponentsLookup.CharacterBaseAttributes); } }
    public bool hasCharacterBaseAttributes { get { return HasComponent(GameComponentsLookup.CharacterBaseAttributes); } }

    public void AddCharacterBaseAttributes(System.Collections.Generic.Dictionary<string, Attributes> newDic) {
        var index = GameComponentsLookup.CharacterBaseAttributes;
        var component = (CharacterBaseAttributesComponent)CreateComponent(index, typeof(CharacterBaseAttributesComponent));
        component.dic = newDic;
        AddComponent(index, component);
    }

    public void ReplaceCharacterBaseAttributes(System.Collections.Generic.Dictionary<string, Attributes> newDic) {
        var index = GameComponentsLookup.CharacterBaseAttributes;
        var component = (CharacterBaseAttributesComponent)CreateComponent(index, typeof(CharacterBaseAttributesComponent));
        component.dic = newDic;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterBaseAttributes() {
        RemoveComponent(GameComponentsLookup.CharacterBaseAttributes);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterBaseAttributes;

    public static Entitas.IMatcher<GameEntity> CharacterBaseAttributes {
        get {
            if (_matcherCharacterBaseAttributes == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterBaseAttributes);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterBaseAttributes = matcher;
            }

            return _matcherCharacterBaseAttributes;
        }
    }
}
