//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity serverConfigEntity { get { return GetGroup(GameMatcher.ServerConfig).GetSingleEntity(); } }
    public ServerConfigComponent serverConfig { get { return serverConfigEntity.serverConfig; } }
    public bool hasServerConfig { get { return serverConfigEntity != null; } }

    public GameEntity SetServerConfig(ServerConfig newValue) {
        if (hasServerConfig) {
            throw new Entitas.EntitasException("Could not set ServerConfig!\n" + this + " already has an entity with ServerConfigComponent!",
                "You should check if the context already has a serverConfigEntity before setting it or use context.ReplaceServerConfig().");
        }
        var entity = CreateEntity();
        entity.AddServerConfig(newValue);
        return entity;
    }

    public void ReplaceServerConfig(ServerConfig newValue) {
        var entity = serverConfigEntity;
        if (entity == null) {
            entity = SetServerConfig(newValue);
        } else {
            entity.ReplaceServerConfig(newValue);
        }
    }

    public void RemoveServerConfig() {
        serverConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ServerConfigComponent serverConfig { get { return (ServerConfigComponent)GetComponent(GameComponentsLookup.ServerConfig); } }
    public bool hasServerConfig { get { return HasComponent(GameComponentsLookup.ServerConfig); } }

    public void AddServerConfig(ServerConfig newValue) {
        var index = GameComponentsLookup.ServerConfig;
        var component = (ServerConfigComponent)CreateComponent(index, typeof(ServerConfigComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceServerConfig(ServerConfig newValue) {
        var index = GameComponentsLookup.ServerConfig;
        var component = (ServerConfigComponent)CreateComponent(index, typeof(ServerConfigComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveServerConfig() {
        RemoveComponent(GameComponentsLookup.ServerConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherServerConfig;

    public static Entitas.IMatcher<GameEntity> ServerConfig {
        get {
            if (_matcherServerConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ServerConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherServerConfig = matcher;
            }

            return _matcherServerConfig;
        }
    }
}
