//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyLoadingSceneTextImageListenerComponent anyLoadingSceneTextImageListener { get { return (AnyLoadingSceneTextImageListenerComponent)GetComponent(GameComponentsLookup.AnyLoadingSceneTextImageListener); } }
    public bool hasAnyLoadingSceneTextImageListener { get { return HasComponent(GameComponentsLookup.AnyLoadingSceneTextImageListener); } }

    public void AddAnyLoadingSceneTextImageListener(System.Collections.Generic.List<IAnyLoadingSceneTextImageListener> newValue) {
        var index = GameComponentsLookup.AnyLoadingSceneTextImageListener;
        var component = (AnyLoadingSceneTextImageListenerComponent)CreateComponent(index, typeof(AnyLoadingSceneTextImageListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyLoadingSceneTextImageListener(System.Collections.Generic.List<IAnyLoadingSceneTextImageListener> newValue) {
        var index = GameComponentsLookup.AnyLoadingSceneTextImageListener;
        var component = (AnyLoadingSceneTextImageListenerComponent)CreateComponent(index, typeof(AnyLoadingSceneTextImageListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyLoadingSceneTextImageListener() {
        RemoveComponent(GameComponentsLookup.AnyLoadingSceneTextImageListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyLoadingSceneTextImageListener;

    public static Entitas.IMatcher<GameEntity> AnyLoadingSceneTextImageListener {
        get {
            if (_matcherAnyLoadingSceneTextImageListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyLoadingSceneTextImageListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyLoadingSceneTextImageListener = matcher;
            }

            return _matcherAnyLoadingSceneTextImageListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyLoadingSceneTextImageListener(IAnyLoadingSceneTextImageListener value) {
        var listeners = hasAnyLoadingSceneTextImageListener
            ? anyLoadingSceneTextImageListener.value
            : new System.Collections.Generic.List<IAnyLoadingSceneTextImageListener>();
        listeners.Add(value);
        ReplaceAnyLoadingSceneTextImageListener(listeners);
    }

    public void RemoveAnyLoadingSceneTextImageListener(IAnyLoadingSceneTextImageListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyLoadingSceneTextImageListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyLoadingSceneTextImageListener();
        } else {
            ReplaceAnyLoadingSceneTextImageListener(listeners);
        }
    }
}
