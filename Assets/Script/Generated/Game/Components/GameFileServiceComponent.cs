//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity fileServiceEntity { get { return GetGroup(GameMatcher.FileService).GetSingleEntity(); } }
    public FileServiceComponent fileService { get { return fileServiceEntity.fileService; } }
    public bool hasFileService { get { return fileServiceEntity != null; } }

    public GameEntity SetFileService(IFileService newInstance) {
        if (hasFileService) {
            throw new Entitas.EntitasException("Could not set FileService!\n" + this + " already has an entity with FileServiceComponent!",
                "You should check if the context already has a fileServiceEntity before setting it or use context.ReplaceFileService().");
        }
        var entity = CreateEntity();
        entity.AddFileService(newInstance);
        return entity;
    }

    public void ReplaceFileService(IFileService newInstance) {
        var entity = fileServiceEntity;
        if (entity == null) {
            entity = SetFileService(newInstance);
        } else {
            entity.ReplaceFileService(newInstance);
        }
    }

    public void RemoveFileService() {
        fileServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FileServiceComponent fileService { get { return (FileServiceComponent)GetComponent(GameComponentsLookup.FileService); } }
    public bool hasFileService { get { return HasComponent(GameComponentsLookup.FileService); } }

    public void AddFileService(IFileService newInstance) {
        var index = GameComponentsLookup.FileService;
        var component = (FileServiceComponent)CreateComponent(index, typeof(FileServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceFileService(IFileService newInstance) {
        var index = GameComponentsLookup.FileService;
        var component = (FileServiceComponent)CreateComponent(index, typeof(FileServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveFileService() {
        RemoveComponent(GameComponentsLookup.FileService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFileService;

    public static Entitas.IMatcher<GameEntity> FileService {
        get {
            if (_matcherFileService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FileService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFileService = matcher;
            }

            return _matcherFileService;
        }
    }
}
