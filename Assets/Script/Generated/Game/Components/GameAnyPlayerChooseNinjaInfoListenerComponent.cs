//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyPlayerChooseNinjaInfoListenerComponent anyPlayerChooseNinjaInfoListener { get { return (AnyPlayerChooseNinjaInfoListenerComponent)GetComponent(GameComponentsLookup.AnyPlayerChooseNinjaInfoListener); } }
    public bool hasAnyPlayerChooseNinjaInfoListener { get { return HasComponent(GameComponentsLookup.AnyPlayerChooseNinjaInfoListener); } }

    public void AddAnyPlayerChooseNinjaInfoListener(System.Collections.Generic.List<IAnyPlayerChooseNinjaInfoListener> newValue) {
        var index = GameComponentsLookup.AnyPlayerChooseNinjaInfoListener;
        var component = (AnyPlayerChooseNinjaInfoListenerComponent)CreateComponent(index, typeof(AnyPlayerChooseNinjaInfoListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyPlayerChooseNinjaInfoListener(System.Collections.Generic.List<IAnyPlayerChooseNinjaInfoListener> newValue) {
        var index = GameComponentsLookup.AnyPlayerChooseNinjaInfoListener;
        var component = (AnyPlayerChooseNinjaInfoListenerComponent)CreateComponent(index, typeof(AnyPlayerChooseNinjaInfoListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyPlayerChooseNinjaInfoListener() {
        RemoveComponent(GameComponentsLookup.AnyPlayerChooseNinjaInfoListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyPlayerChooseNinjaInfoListener;

    public static Entitas.IMatcher<GameEntity> AnyPlayerChooseNinjaInfoListener {
        get {
            if (_matcherAnyPlayerChooseNinjaInfoListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyPlayerChooseNinjaInfoListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyPlayerChooseNinjaInfoListener = matcher;
            }

            return _matcherAnyPlayerChooseNinjaInfoListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyPlayerChooseNinjaInfoListener(IAnyPlayerChooseNinjaInfoListener value) {
        var listeners = hasAnyPlayerChooseNinjaInfoListener
            ? anyPlayerChooseNinjaInfoListener.value
            : new System.Collections.Generic.List<IAnyPlayerChooseNinjaInfoListener>();
        listeners.Add(value);
        ReplaceAnyPlayerChooseNinjaInfoListener(listeners);
    }

    public void RemoveAnyPlayerChooseNinjaInfoListener(IAnyPlayerChooseNinjaInfoListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyPlayerChooseNinjaInfoListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyPlayerChooseNinjaInfoListener();
        } else {
            ReplaceAnyPlayerChooseNinjaInfoListener(listeners);
        }
    }
}
