//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PerceptionLevelComponent perceptionLevel { get { return (PerceptionLevelComponent)GetComponent(GameComponentsLookup.PerceptionLevel); } }
    public bool hasPerceptionLevel { get { return HasComponent(GameComponentsLookup.PerceptionLevel); } }

    public void AddPerceptionLevel(int newValue) {
        var index = GameComponentsLookup.PerceptionLevel;
        var component = (PerceptionLevelComponent)CreateComponent(index, typeof(PerceptionLevelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePerceptionLevel(int newValue) {
        var index = GameComponentsLookup.PerceptionLevel;
        var component = (PerceptionLevelComponent)CreateComponent(index, typeof(PerceptionLevelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePerceptionLevel() {
        RemoveComponent(GameComponentsLookup.PerceptionLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPerceptionLevel;

    public static Entitas.IMatcher<GameEntity> PerceptionLevel {
        get {
            if (_matcherPerceptionLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PerceptionLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPerceptionLevel = matcher;
            }

            return _matcherPerceptionLevel;
        }
    }
}
