//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity loadConfigServiceEntity { get { return GetGroup(GameMatcher.LoadConfigService).GetSingleEntity(); } }
    public LoadConfigServiceComponent loadConfigService { get { return loadConfigServiceEntity.loadConfigService; } }
    public bool hasLoadConfigService { get { return loadConfigServiceEntity != null; } }

    public GameEntity SetLoadConfigService(ILoadConfigService newInstance) {
        if (hasLoadConfigService) {
            throw new Entitas.EntitasException("Could not set LoadConfigService!\n" + this + " already has an entity with LoadConfigServiceComponent!",
                "You should check if the context already has a loadConfigServiceEntity before setting it or use context.ReplaceLoadConfigService().");
        }
        var entity = CreateEntity();
        entity.AddLoadConfigService(newInstance);
        return entity;
    }

    public void ReplaceLoadConfigService(ILoadConfigService newInstance) {
        var entity = loadConfigServiceEntity;
        if (entity == null) {
            entity = SetLoadConfigService(newInstance);
        } else {
            entity.ReplaceLoadConfigService(newInstance);
        }
    }

    public void RemoveLoadConfigService() {
        loadConfigServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LoadConfigServiceComponent loadConfigService { get { return (LoadConfigServiceComponent)GetComponent(GameComponentsLookup.LoadConfigService); } }
    public bool hasLoadConfigService { get { return HasComponent(GameComponentsLookup.LoadConfigService); } }

    public void AddLoadConfigService(ILoadConfigService newInstance) {
        var index = GameComponentsLookup.LoadConfigService;
        var component = (LoadConfigServiceComponent)CreateComponent(index, typeof(LoadConfigServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceLoadConfigService(ILoadConfigService newInstance) {
        var index = GameComponentsLookup.LoadConfigService;
        var component = (LoadConfigServiceComponent)CreateComponent(index, typeof(LoadConfigServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveLoadConfigService() {
        RemoveComponent(GameComponentsLookup.LoadConfigService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLoadConfigService;

    public static Entitas.IMatcher<GameEntity> LoadConfigService {
        get {
            if (_matcherLoadConfigService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LoadConfigService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLoadConfigService = matcher;
            }

            return _matcherLoadConfigService;
        }
    }
}
