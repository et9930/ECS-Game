//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyJumpAngleListenerComponent anyJumpAngleListener { get { return (AnyJumpAngleListenerComponent)GetComponent(GameComponentsLookup.AnyJumpAngleListener); } }
    public bool hasAnyJumpAngleListener { get { return HasComponent(GameComponentsLookup.AnyJumpAngleListener); } }

    public void AddAnyJumpAngleListener(System.Collections.Generic.List<IAnyJumpAngleListener> newValue) {
        var index = GameComponentsLookup.AnyJumpAngleListener;
        var component = (AnyJumpAngleListenerComponent)CreateComponent(index, typeof(AnyJumpAngleListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyJumpAngleListener(System.Collections.Generic.List<IAnyJumpAngleListener> newValue) {
        var index = GameComponentsLookup.AnyJumpAngleListener;
        var component = (AnyJumpAngleListenerComponent)CreateComponent(index, typeof(AnyJumpAngleListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyJumpAngleListener() {
        RemoveComponent(GameComponentsLookup.AnyJumpAngleListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyJumpAngleListener;

    public static Entitas.IMatcher<GameEntity> AnyJumpAngleListener {
        get {
            if (_matcherAnyJumpAngleListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyJumpAngleListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyJumpAngleListener = matcher;
            }

            return _matcherAnyJumpAngleListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyJumpAngleListener(IAnyJumpAngleListener value) {
        var listeners = hasAnyJumpAngleListener
            ? anyJumpAngleListener.value
            : new System.Collections.Generic.List<IAnyJumpAngleListener>();
        listeners.Add(value);
        ReplaceAnyJumpAngleListener(listeners);
    }

    public void RemoveAnyJumpAngleListener(IAnyJumpAngleListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyJumpAngleListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyJumpAngleListener();
        } else {
            ReplaceAnyJumpAngleListener(listeners);
        }
    }
}
