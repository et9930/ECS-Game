//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity lastSendStateTimeEntity { get { return GetGroup(GameMatcher.LastSendStateTime).GetSingleEntity(); } }
    public LastSendStateTimeComponent lastSendStateTime { get { return lastSendStateTimeEntity.lastSendStateTime; } }
    public bool hasLastSendStateTime { get { return lastSendStateTimeEntity != null; } }

    public GameEntity SetLastSendStateTime(double newValue) {
        if (hasLastSendStateTime) {
            throw new Entitas.EntitasException("Could not set LastSendStateTime!\n" + this + " already has an entity with LastSendStateTimeComponent!",
                "You should check if the context already has a lastSendStateTimeEntity before setting it or use context.ReplaceLastSendStateTime().");
        }
        var entity = CreateEntity();
        entity.AddLastSendStateTime(newValue);
        return entity;
    }

    public void ReplaceLastSendStateTime(double newValue) {
        var entity = lastSendStateTimeEntity;
        if (entity == null) {
            entity = SetLastSendStateTime(newValue);
        } else {
            entity.ReplaceLastSendStateTime(newValue);
        }
    }

    public void RemoveLastSendStateTime() {
        lastSendStateTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LastSendStateTimeComponent lastSendStateTime { get { return (LastSendStateTimeComponent)GetComponent(GameComponentsLookup.LastSendStateTime); } }
    public bool hasLastSendStateTime { get { return HasComponent(GameComponentsLookup.LastSendStateTime); } }

    public void AddLastSendStateTime(double newValue) {
        var index = GameComponentsLookup.LastSendStateTime;
        var component = (LastSendStateTimeComponent)CreateComponent(index, typeof(LastSendStateTimeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLastSendStateTime(double newValue) {
        var index = GameComponentsLookup.LastSendStateTime;
        var component = (LastSendStateTimeComponent)CreateComponent(index, typeof(LastSendStateTimeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLastSendStateTime() {
        RemoveComponent(GameComponentsLookup.LastSendStateTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLastSendStateTime;

    public static Entitas.IMatcher<GameEntity> LastSendStateTime {
        get {
            if (_matcherLastSendStateTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LastSendStateTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLastSendStateTime = matcher;
            }

            return _matcherLastSendStateTime;
        }
    }
}
