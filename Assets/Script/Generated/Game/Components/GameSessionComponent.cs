//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity sessionEntity { get { return GetGroup(GameMatcher.Session).GetSingleEntity(); } }
    public SessionComponent session { get { return sessionEntity.session; } }
    public bool hasSession { get { return sessionEntity != null; } }

    public GameEntity SetSession(Nakama.ISession newValue) {
        if (hasSession) {
            throw new Entitas.EntitasException("Could not set Session!\n" + this + " already has an entity with SessionComponent!",
                "You should check if the context already has a sessionEntity before setting it or use context.ReplaceSession().");
        }
        var entity = CreateEntity();
        entity.AddSession(newValue);
        return entity;
    }

    public void ReplaceSession(Nakama.ISession newValue) {
        var entity = sessionEntity;
        if (entity == null) {
            entity = SetSession(newValue);
        } else {
            entity.ReplaceSession(newValue);
        }
    }

    public void RemoveSession() {
        sessionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SessionComponent session { get { return (SessionComponent)GetComponent(GameComponentsLookup.Session); } }
    public bool hasSession { get { return HasComponent(GameComponentsLookup.Session); } }

    public void AddSession(Nakama.ISession newValue) {
        var index = GameComponentsLookup.Session;
        var component = (SessionComponent)CreateComponent(index, typeof(SessionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSession(Nakama.ISession newValue) {
        var index = GameComponentsLookup.Session;
        var component = (SessionComponent)CreateComponent(index, typeof(SessionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSession() {
        RemoveComponent(GameComponentsLookup.Session);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSession;

    public static Entitas.IMatcher<GameEntity> Session {
        get {
            if (_matcherSession == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Session);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSession = matcher;
            }

            return _matcherSession;
        }
    }
}
