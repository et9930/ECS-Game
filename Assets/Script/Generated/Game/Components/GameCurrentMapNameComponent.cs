//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentMapNameEntity { get { return GetGroup(GameMatcher.CurrentMapName).GetSingleEntity(); } }
    public CurrentMapNameComponent currentMapName { get { return currentMapNameEntity.currentMapName; } }
    public bool hasCurrentMapName { get { return currentMapNameEntity != null; } }

    public GameEntity SetCurrentMapName(string newValue) {
        if (hasCurrentMapName) {
            throw new Entitas.EntitasException("Could not set CurrentMapName!\n" + this + " already has an entity with CurrentMapNameComponent!",
                "You should check if the context already has a currentMapNameEntity before setting it or use context.ReplaceCurrentMapName().");
        }
        var entity = CreateEntity();
        entity.AddCurrentMapName(newValue);
        return entity;
    }

    public void ReplaceCurrentMapName(string newValue) {
        var entity = currentMapNameEntity;
        if (entity == null) {
            entity = SetCurrentMapName(newValue);
        } else {
            entity.ReplaceCurrentMapName(newValue);
        }
    }

    public void RemoveCurrentMapName() {
        currentMapNameEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentMapNameComponent currentMapName { get { return (CurrentMapNameComponent)GetComponent(GameComponentsLookup.CurrentMapName); } }
    public bool hasCurrentMapName { get { return HasComponent(GameComponentsLookup.CurrentMapName); } }

    public void AddCurrentMapName(string newValue) {
        var index = GameComponentsLookup.CurrentMapName;
        var component = (CurrentMapNameComponent)CreateComponent(index, typeof(CurrentMapNameComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentMapName(string newValue) {
        var index = GameComponentsLookup.CurrentMapName;
        var component = (CurrentMapNameComponent)CreateComponent(index, typeof(CurrentMapNameComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentMapName() {
        RemoveComponent(GameComponentsLookup.CurrentMapName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentMapName;

    public static Entitas.IMatcher<GameEntity> CurrentMapName {
        get {
            if (_matcherCurrentMapName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentMapName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentMapName = matcher;
            }

            return _matcherCurrentMapName;
        }
    }
}
