//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyJumpForceListenerComponent anyJumpForceListener { get { return (AnyJumpForceListenerComponent)GetComponent(GameComponentsLookup.AnyJumpForceListener); } }
    public bool hasAnyJumpForceListener { get { return HasComponent(GameComponentsLookup.AnyJumpForceListener); } }

    public void AddAnyJumpForceListener(System.Collections.Generic.List<IAnyJumpForceListener> newValue) {
        var index = GameComponentsLookup.AnyJumpForceListener;
        var component = (AnyJumpForceListenerComponent)CreateComponent(index, typeof(AnyJumpForceListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyJumpForceListener(System.Collections.Generic.List<IAnyJumpForceListener> newValue) {
        var index = GameComponentsLookup.AnyJumpForceListener;
        var component = (AnyJumpForceListenerComponent)CreateComponent(index, typeof(AnyJumpForceListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyJumpForceListener() {
        RemoveComponent(GameComponentsLookup.AnyJumpForceListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyJumpForceListener;

    public static Entitas.IMatcher<GameEntity> AnyJumpForceListener {
        get {
            if (_matcherAnyJumpForceListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyJumpForceListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyJumpForceListener = matcher;
            }

            return _matcherAnyJumpForceListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyJumpForceListener(IAnyJumpForceListener value) {
        var listeners = hasAnyJumpForceListener
            ? anyJumpForceListener.value
            : new System.Collections.Generic.List<IAnyJumpForceListener>();
        listeners.Add(value);
        ReplaceAnyJumpForceListener(listeners);
    }

    public void RemoveAnyJumpForceListener(IAnyJumpForceListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyJumpForceListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyJumpForceListener();
        } else {
            ReplaceAnyJumpForceListener(listeners);
        }
    }
}
