//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mapConfigEntity { get { return GetGroup(GameMatcher.MapConfig).GetSingleEntity(); } }
    public MapConfigComponent mapConfig { get { return mapConfigEntity.mapConfig; } }
    public bool hasMapConfig { get { return mapConfigEntity != null; } }

    public GameEntity SetMapConfig(System.Collections.Generic.Dictionary<string, MapConfig> newList) {
        if (hasMapConfig) {
            throw new Entitas.EntitasException("Could not set MapConfig!\n" + this + " already has an entity with MapConfigComponent!",
                "You should check if the context already has a mapConfigEntity before setting it or use context.ReplaceMapConfig().");
        }
        var entity = CreateEntity();
        entity.AddMapConfig(newList);
        return entity;
    }

    public void ReplaceMapConfig(System.Collections.Generic.Dictionary<string, MapConfig> newList) {
        var entity = mapConfigEntity;
        if (entity == null) {
            entity = SetMapConfig(newList);
        } else {
            entity.ReplaceMapConfig(newList);
        }
    }

    public void RemoveMapConfig() {
        mapConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MapConfigComponent mapConfig { get { return (MapConfigComponent)GetComponent(GameComponentsLookup.MapConfig); } }
    public bool hasMapConfig { get { return HasComponent(GameComponentsLookup.MapConfig); } }

    public void AddMapConfig(System.Collections.Generic.Dictionary<string, MapConfig> newList) {
        var index = GameComponentsLookup.MapConfig;
        var component = (MapConfigComponent)CreateComponent(index, typeof(MapConfigComponent));
        component.list = newList;
        AddComponent(index, component);
    }

    public void ReplaceMapConfig(System.Collections.Generic.Dictionary<string, MapConfig> newList) {
        var index = GameComponentsLookup.MapConfig;
        var component = (MapConfigComponent)CreateComponent(index, typeof(MapConfigComponent));
        component.list = newList;
        ReplaceComponent(index, component);
    }

    public void RemoveMapConfig() {
        RemoveComponent(GameComponentsLookup.MapConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMapConfig;

    public static Entitas.IMatcher<GameEntity> MapConfig {
        get {
            if (_matcherMapConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MapConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMapConfig = matcher;
            }

            return _matcherMapConfig;
        }
    }
}
