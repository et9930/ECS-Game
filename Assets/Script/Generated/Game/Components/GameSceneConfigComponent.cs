//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity sceneConfigEntity { get { return GetGroup(GameMatcher.SceneConfig).GetSingleEntity(); } }
    public SceneConfigComponent sceneConfig { get { return sceneConfigEntity.sceneConfig; } }
    public bool hasSceneConfig { get { return sceneConfigEntity != null; } }

    public GameEntity SetSceneConfig(SceneConfigs newSceneConfig) {
        if (hasSceneConfig) {
            throw new Entitas.EntitasException("Could not set SceneConfig!\n" + this + " already has an entity with SceneConfigComponent!",
                "You should check if the context already has a sceneConfigEntity before setting it or use context.ReplaceSceneConfig().");
        }
        var entity = CreateEntity();
        entity.AddSceneConfig(newSceneConfig);
        return entity;
    }

    public void ReplaceSceneConfig(SceneConfigs newSceneConfig) {
        var entity = sceneConfigEntity;
        if (entity == null) {
            entity = SetSceneConfig(newSceneConfig);
        } else {
            entity.ReplaceSceneConfig(newSceneConfig);
        }
    }

    public void RemoveSceneConfig() {
        sceneConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SceneConfigComponent sceneConfig { get { return (SceneConfigComponent)GetComponent(GameComponentsLookup.SceneConfig); } }
    public bool hasSceneConfig { get { return HasComponent(GameComponentsLookup.SceneConfig); } }

    public void AddSceneConfig(SceneConfigs newSceneConfig) {
        var index = GameComponentsLookup.SceneConfig;
        var component = (SceneConfigComponent)CreateComponent(index, typeof(SceneConfigComponent));
        component.SceneConfig = newSceneConfig;
        AddComponent(index, component);
    }

    public void ReplaceSceneConfig(SceneConfigs newSceneConfig) {
        var index = GameComponentsLookup.SceneConfig;
        var component = (SceneConfigComponent)CreateComponent(index, typeof(SceneConfigComponent));
        component.SceneConfig = newSceneConfig;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneConfig() {
        RemoveComponent(GameComponentsLookup.SceneConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSceneConfig;

    public static Entitas.IMatcher<GameEntity> SceneConfig {
        get {
            if (_matcherSceneConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SceneConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSceneConfig = matcher;
            }

            return _matcherSceneConfig;
        }
    }
}
