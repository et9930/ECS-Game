//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SelectTargetDistanceComponent selectTargetDistance { get { return (SelectTargetDistanceComponent)GetComponent(GameComponentsLookup.SelectTargetDistance); } }
    public bool hasSelectTargetDistance { get { return HasComponent(GameComponentsLookup.SelectTargetDistance); } }

    public void AddSelectTargetDistance(int newValue) {
        var index = GameComponentsLookup.SelectTargetDistance;
        var component = (SelectTargetDistanceComponent)CreateComponent(index, typeof(SelectTargetDistanceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSelectTargetDistance(int newValue) {
        var index = GameComponentsLookup.SelectTargetDistance;
        var component = (SelectTargetDistanceComponent)CreateComponent(index, typeof(SelectTargetDistanceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSelectTargetDistance() {
        RemoveComponent(GameComponentsLookup.SelectTargetDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSelectTargetDistance;

    public static Entitas.IMatcher<GameEntity> SelectTargetDistance {
        get {
            if (_matcherSelectTargetDistance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SelectTargetDistance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectTargetDistance = matcher;
            }

            return _matcherSelectTargetDistance;
        }
    }
}
