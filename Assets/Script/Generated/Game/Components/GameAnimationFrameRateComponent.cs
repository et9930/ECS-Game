//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity animationFrameRateEntity { get { return GetGroup(GameMatcher.AnimationFrameRate).GetSingleEntity(); } }
    public AnimationFrameRateComponent animationFrameRate { get { return animationFrameRateEntity.animationFrameRate; } }
    public bool hasAnimationFrameRate { get { return animationFrameRateEntity != null; } }

    public GameEntity SetAnimationFrameRate(int newValue) {
        if (hasAnimationFrameRate) {
            throw new Entitas.EntitasException("Could not set AnimationFrameRate!\n" + this + " already has an entity with AnimationFrameRateComponent!",
                "You should check if the context already has a animationFrameRateEntity before setting it or use context.ReplaceAnimationFrameRate().");
        }
        var entity = CreateEntity();
        entity.AddAnimationFrameRate(newValue);
        return entity;
    }

    public void ReplaceAnimationFrameRate(int newValue) {
        var entity = animationFrameRateEntity;
        if (entity == null) {
            entity = SetAnimationFrameRate(newValue);
        } else {
            entity.ReplaceAnimationFrameRate(newValue);
        }
    }

    public void RemoveAnimationFrameRate() {
        animationFrameRateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnimationFrameRateComponent animationFrameRate { get { return (AnimationFrameRateComponent)GetComponent(GameComponentsLookup.AnimationFrameRate); } }
    public bool hasAnimationFrameRate { get { return HasComponent(GameComponentsLookup.AnimationFrameRate); } }

    public void AddAnimationFrameRate(int newValue) {
        var index = GameComponentsLookup.AnimationFrameRate;
        var component = (AnimationFrameRateComponent)CreateComponent(index, typeof(AnimationFrameRateComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnimationFrameRate(int newValue) {
        var index = GameComponentsLookup.AnimationFrameRate;
        var component = (AnimationFrameRateComponent)CreateComponent(index, typeof(AnimationFrameRateComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnimationFrameRate() {
        RemoveComponent(GameComponentsLookup.AnimationFrameRate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimationFrameRate;

    public static Entitas.IMatcher<GameEntity> AnimationFrameRate {
        get {
            if (_matcherAnimationFrameRate == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimationFrameRate);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimationFrameRate = matcher;
            }

            return _matcherAnimationFrameRate;
        }
    }
}
