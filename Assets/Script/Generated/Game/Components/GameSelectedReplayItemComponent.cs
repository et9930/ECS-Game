//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity selectedReplayItemEntity { get { return GetGroup(GameMatcher.SelectedReplayItem).GetSingleEntity(); } }
    public SelectedReplayItemComponent selectedReplayItem { get { return selectedReplayItemEntity.selectedReplayItem; } }
    public bool hasSelectedReplayItem { get { return selectedReplayItemEntity != null; } }

    public GameEntity SetSelectedReplayItem(GameEntity newEntity) {
        if (hasSelectedReplayItem) {
            throw new Entitas.EntitasException("Could not set SelectedReplayItem!\n" + this + " already has an entity with SelectedReplayItemComponent!",
                "You should check if the context already has a selectedReplayItemEntity before setting it or use context.ReplaceSelectedReplayItem().");
        }
        var entity = CreateEntity();
        entity.AddSelectedReplayItem(newEntity);
        return entity;
    }

    public void ReplaceSelectedReplayItem(GameEntity newEntity) {
        var entity = selectedReplayItemEntity;
        if (entity == null) {
            entity = SetSelectedReplayItem(newEntity);
        } else {
            entity.ReplaceSelectedReplayItem(newEntity);
        }
    }

    public void RemoveSelectedReplayItem() {
        selectedReplayItemEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SelectedReplayItemComponent selectedReplayItem { get { return (SelectedReplayItemComponent)GetComponent(GameComponentsLookup.SelectedReplayItem); } }
    public bool hasSelectedReplayItem { get { return HasComponent(GameComponentsLookup.SelectedReplayItem); } }

    public void AddSelectedReplayItem(GameEntity newEntity) {
        var index = GameComponentsLookup.SelectedReplayItem;
        var component = (SelectedReplayItemComponent)CreateComponent(index, typeof(SelectedReplayItemComponent));
        component.entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceSelectedReplayItem(GameEntity newEntity) {
        var index = GameComponentsLookup.SelectedReplayItem;
        var component = (SelectedReplayItemComponent)CreateComponent(index, typeof(SelectedReplayItemComponent));
        component.entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveSelectedReplayItem() {
        RemoveComponent(GameComponentsLookup.SelectedReplayItem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSelectedReplayItem;

    public static Entitas.IMatcher<GameEntity> SelectedReplayItem {
        get {
            if (_matcherSelectedReplayItem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SelectedReplayItem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectedReplayItem = matcher;
            }

            return _matcherSelectedReplayItem;
        }
    }
}
