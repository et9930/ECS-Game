//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ThrowWeaponControlComponent throwWeaponControl { get { return (ThrowWeaponControlComponent)GetComponent(GameComponentsLookup.ThrowWeaponControl); } }
    public bool hasThrowWeaponControl { get { return HasComponent(GameComponentsLookup.ThrowWeaponControl); } }

    public void AddThrowWeaponControl(MatchDataThrowWeaponControl newValue) {
        var index = GameComponentsLookup.ThrowWeaponControl;
        var component = (ThrowWeaponControlComponent)CreateComponent(index, typeof(ThrowWeaponControlComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceThrowWeaponControl(MatchDataThrowWeaponControl newValue) {
        var index = GameComponentsLookup.ThrowWeaponControl;
        var component = (ThrowWeaponControlComponent)CreateComponent(index, typeof(ThrowWeaponControlComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveThrowWeaponControl() {
        RemoveComponent(GameComponentsLookup.ThrowWeaponControl);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherThrowWeaponControl;

    public static Entitas.IMatcher<GameEntity> ThrowWeaponControl {
        get {
            if (_matcherThrowWeaponControl == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ThrowWeaponControl);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherThrowWeaponControl = matcher;
            }

            return _matcherThrowWeaponControl;
        }
    }
}
