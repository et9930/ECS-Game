//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity ninjutsuAttributesEntity { get { return GetGroup(GameMatcher.NinjutsuAttributes).GetSingleEntity(); } }
    public NinjutsuAttributesComponent ninjutsuAttributes { get { return ninjutsuAttributesEntity.ninjutsuAttributes; } }
    public bool hasNinjutsuAttributes { get { return ninjutsuAttributesEntity != null; } }

    public GameEntity SetNinjutsuAttributes(System.Collections.Generic.Dictionary<string, Ninjutsu> newDic) {
        if (hasNinjutsuAttributes) {
            throw new Entitas.EntitasException("Could not set NinjutsuAttributes!\n" + this + " already has an entity with NinjutsuAttributesComponent!",
                "You should check if the context already has a ninjutsuAttributesEntity before setting it or use context.ReplaceNinjutsuAttributes().");
        }
        var entity = CreateEntity();
        entity.AddNinjutsuAttributes(newDic);
        return entity;
    }

    public void ReplaceNinjutsuAttributes(System.Collections.Generic.Dictionary<string, Ninjutsu> newDic) {
        var entity = ninjutsuAttributesEntity;
        if (entity == null) {
            entity = SetNinjutsuAttributes(newDic);
        } else {
            entity.ReplaceNinjutsuAttributes(newDic);
        }
    }

    public void RemoveNinjutsuAttributes() {
        ninjutsuAttributesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NinjutsuAttributesComponent ninjutsuAttributes { get { return (NinjutsuAttributesComponent)GetComponent(GameComponentsLookup.NinjutsuAttributes); } }
    public bool hasNinjutsuAttributes { get { return HasComponent(GameComponentsLookup.NinjutsuAttributes); } }

    public void AddNinjutsuAttributes(System.Collections.Generic.Dictionary<string, Ninjutsu> newDic) {
        var index = GameComponentsLookup.NinjutsuAttributes;
        var component = (NinjutsuAttributesComponent)CreateComponent(index, typeof(NinjutsuAttributesComponent));
        component.dic = newDic;
        AddComponent(index, component);
    }

    public void ReplaceNinjutsuAttributes(System.Collections.Generic.Dictionary<string, Ninjutsu> newDic) {
        var index = GameComponentsLookup.NinjutsuAttributes;
        var component = (NinjutsuAttributesComponent)CreateComponent(index, typeof(NinjutsuAttributesComponent));
        component.dic = newDic;
        ReplaceComponent(index, component);
    }

    public void RemoveNinjutsuAttributes() {
        RemoveComponent(GameComponentsLookup.NinjutsuAttributes);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNinjutsuAttributes;

    public static Entitas.IMatcher<GameEntity> NinjutsuAttributes {
        get {
            if (_matcherNinjutsuAttributes == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NinjutsuAttributes);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNinjutsuAttributes = matcher;
            }

            return _matcherNinjutsuAttributes;
        }
    }
}
