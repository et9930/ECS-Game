//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AntiPerceptionLevelComponent antiPerceptionLevel { get { return (AntiPerceptionLevelComponent)GetComponent(GameComponentsLookup.AntiPerceptionLevel); } }
    public bool hasAntiPerceptionLevel { get { return HasComponent(GameComponentsLookup.AntiPerceptionLevel); } }

    public void AddAntiPerceptionLevel(int newValue) {
        var index = GameComponentsLookup.AntiPerceptionLevel;
        var component = (AntiPerceptionLevelComponent)CreateComponent(index, typeof(AntiPerceptionLevelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAntiPerceptionLevel(int newValue) {
        var index = GameComponentsLookup.AntiPerceptionLevel;
        var component = (AntiPerceptionLevelComponent)CreateComponent(index, typeof(AntiPerceptionLevelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAntiPerceptionLevel() {
        RemoveComponent(GameComponentsLookup.AntiPerceptionLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAntiPerceptionLevel;

    public static Entitas.IMatcher<GameEntity> AntiPerceptionLevel {
        get {
            if (_matcherAntiPerceptionLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AntiPerceptionLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAntiPerceptionLevel = matcher;
            }

            return _matcherAntiPerceptionLevel;
        }
    }
}
