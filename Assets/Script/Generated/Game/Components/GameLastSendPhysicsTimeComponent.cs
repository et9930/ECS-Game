//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity lastSendPhysicsTimeEntity { get { return GetGroup(GameMatcher.LastSendPhysicsTime).GetSingleEntity(); } }
    public LastSendPhysicsTimeComponent lastSendPhysicsTime { get { return lastSendPhysicsTimeEntity.lastSendPhysicsTime; } }
    public bool hasLastSendPhysicsTime { get { return lastSendPhysicsTimeEntity != null; } }

    public GameEntity SetLastSendPhysicsTime(double newValue) {
        if (hasLastSendPhysicsTime) {
            throw new Entitas.EntitasException("Could not set LastSendPhysicsTime!\n" + this + " already has an entity with LastSendPhysicsTimeComponent!",
                "You should check if the context already has a lastSendPhysicsTimeEntity before setting it or use context.ReplaceLastSendPhysicsTime().");
        }
        var entity = CreateEntity();
        entity.AddLastSendPhysicsTime(newValue);
        return entity;
    }

    public void ReplaceLastSendPhysicsTime(double newValue) {
        var entity = lastSendPhysicsTimeEntity;
        if (entity == null) {
            entity = SetLastSendPhysicsTime(newValue);
        } else {
            entity.ReplaceLastSendPhysicsTime(newValue);
        }
    }

    public void RemoveLastSendPhysicsTime() {
        lastSendPhysicsTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LastSendPhysicsTimeComponent lastSendPhysicsTime { get { return (LastSendPhysicsTimeComponent)GetComponent(GameComponentsLookup.LastSendPhysicsTime); } }
    public bool hasLastSendPhysicsTime { get { return HasComponent(GameComponentsLookup.LastSendPhysicsTime); } }

    public void AddLastSendPhysicsTime(double newValue) {
        var index = GameComponentsLookup.LastSendPhysicsTime;
        var component = (LastSendPhysicsTimeComponent)CreateComponent(index, typeof(LastSendPhysicsTimeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLastSendPhysicsTime(double newValue) {
        var index = GameComponentsLookup.LastSendPhysicsTime;
        var component = (LastSendPhysicsTimeComponent)CreateComponent(index, typeof(LastSendPhysicsTimeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLastSendPhysicsTime() {
        RemoveComponent(GameComponentsLookup.LastSendPhysicsTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLastSendPhysicsTime;

    public static Entitas.IMatcher<GameEntity> LastSendPhysicsTime {
        get {
            if (_matcherLastSendPhysicsTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LastSendPhysicsTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLastSendPhysicsTime = matcher;
            }

            return _matcherLastSendPhysicsTime;
        }
    }
}
