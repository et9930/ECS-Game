//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mouseCurrentPositionEntity { get { return GetGroup(GameMatcher.MouseCurrentPosition).GetSingleEntity(); } }
    public MouseCurrentPositionComponent mouseCurrentPosition { get { return mouseCurrentPositionEntity.mouseCurrentPosition; } }
    public bool hasMouseCurrentPosition { get { return mouseCurrentPositionEntity != null; } }

    public GameEntity SetMouseCurrentPosition(System.Numerics.Vector2 newValue) {
        if (hasMouseCurrentPosition) {
            throw new Entitas.EntitasException("Could not set MouseCurrentPosition!\n" + this + " already has an entity with MouseCurrentPositionComponent!",
                "You should check if the context already has a mouseCurrentPositionEntity before setting it or use context.ReplaceMouseCurrentPosition().");
        }
        var entity = CreateEntity();
        entity.AddMouseCurrentPosition(newValue);
        return entity;
    }

    public void ReplaceMouseCurrentPosition(System.Numerics.Vector2 newValue) {
        var entity = mouseCurrentPositionEntity;
        if (entity == null) {
            entity = SetMouseCurrentPosition(newValue);
        } else {
            entity.ReplaceMouseCurrentPosition(newValue);
        }
    }

    public void RemoveMouseCurrentPosition() {
        mouseCurrentPositionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MouseCurrentPositionComponent mouseCurrentPosition { get { return (MouseCurrentPositionComponent)GetComponent(GameComponentsLookup.MouseCurrentPosition); } }
    public bool hasMouseCurrentPosition { get { return HasComponent(GameComponentsLookup.MouseCurrentPosition); } }

    public void AddMouseCurrentPosition(System.Numerics.Vector2 newValue) {
        var index = GameComponentsLookup.MouseCurrentPosition;
        var component = (MouseCurrentPositionComponent)CreateComponent(index, typeof(MouseCurrentPositionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMouseCurrentPosition(System.Numerics.Vector2 newValue) {
        var index = GameComponentsLookup.MouseCurrentPosition;
        var component = (MouseCurrentPositionComponent)CreateComponent(index, typeof(MouseCurrentPositionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMouseCurrentPosition() {
        RemoveComponent(GameComponentsLookup.MouseCurrentPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMouseCurrentPosition;

    public static Entitas.IMatcher<GameEntity> MouseCurrentPosition {
        get {
            if (_matcherMouseCurrentPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MouseCurrentPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMouseCurrentPosition = matcher;
            }

            return _matcherMouseCurrentPosition;
        }
    }
}
