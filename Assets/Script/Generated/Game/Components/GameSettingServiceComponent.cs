//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity settingServiceEntity { get { return GetGroup(GameMatcher.SettingService).GetSingleEntity(); } }
    public SettingServiceComponent settingService { get { return settingServiceEntity.settingService; } }
    public bool hasSettingService { get { return settingServiceEntity != null; } }

    public GameEntity SetSettingService(ISettingService newInstance) {
        if (hasSettingService) {
            throw new Entitas.EntitasException("Could not set SettingService!\n" + this + " already has an entity with SettingServiceComponent!",
                "You should check if the context already has a settingServiceEntity before setting it or use context.ReplaceSettingService().");
        }
        var entity = CreateEntity();
        entity.AddSettingService(newInstance);
        return entity;
    }

    public void ReplaceSettingService(ISettingService newInstance) {
        var entity = settingServiceEntity;
        if (entity == null) {
            entity = SetSettingService(newInstance);
        } else {
            entity.ReplaceSettingService(newInstance);
        }
    }

    public void RemoveSettingService() {
        settingServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SettingServiceComponent settingService { get { return (SettingServiceComponent)GetComponent(GameComponentsLookup.SettingService); } }
    public bool hasSettingService { get { return HasComponent(GameComponentsLookup.SettingService); } }

    public void AddSettingService(ISettingService newInstance) {
        var index = GameComponentsLookup.SettingService;
        var component = (SettingServiceComponent)CreateComponent(index, typeof(SettingServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceSettingService(ISettingService newInstance) {
        var index = GameComponentsLookup.SettingService;
        var component = (SettingServiceComponent)CreateComponent(index, typeof(SettingServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveSettingService() {
        RemoveComponent(GameComponentsLookup.SettingService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSettingService;

    public static Entitas.IMatcher<GameEntity> SettingService {
        get {
            if (_matcherSettingService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SettingService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSettingService = matcher;
            }

            return _matcherSettingService;
        }
    }
}
