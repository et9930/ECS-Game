//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity keyEntity { get { return GetGroup(GameMatcher.Key).GetSingleEntity(); } }
    public KeyComponent key { get { return keyEntity.key; } }
    public bool hasKey { get { return keyEntity != null; } }

    public GameEntity SetKey(Keys newValue) {
        if (hasKey) {
            throw new Entitas.EntitasException("Could not set Key!\n" + this + " already has an entity with KeyComponent!",
                "You should check if the context already has a keyEntity before setting it or use context.ReplaceKey().");
        }
        var entity = CreateEntity();
        entity.AddKey(newValue);
        return entity;
    }

    public void ReplaceKey(Keys newValue) {
        var entity = keyEntity;
        if (entity == null) {
            entity = SetKey(newValue);
        } else {
            entity.ReplaceKey(newValue);
        }
    }

    public void RemoveKey() {
        keyEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public KeyComponent key { get { return (KeyComponent)GetComponent(GameComponentsLookup.Key); } }
    public bool hasKey { get { return HasComponent(GameComponentsLookup.Key); } }

    public void AddKey(Keys newValue) {
        var index = GameComponentsLookup.Key;
        var component = (KeyComponent)CreateComponent(index, typeof(KeyComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceKey(Keys newValue) {
        var index = GameComponentsLookup.Key;
        var component = (KeyComponent)CreateComponent(index, typeof(KeyComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveKey() {
        RemoveComponent(GameComponentsLookup.Key);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKey;

    public static Entitas.IMatcher<GameEntity> Key {
        get {
            if (_matcherKey == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Key);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKey = matcher;
            }

            return _matcherKey;
        }
    }
}
