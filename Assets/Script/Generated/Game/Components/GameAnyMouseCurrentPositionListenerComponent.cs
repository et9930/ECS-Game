//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyMouseCurrentPositionListenerComponent anyMouseCurrentPositionListener { get { return (AnyMouseCurrentPositionListenerComponent)GetComponent(GameComponentsLookup.AnyMouseCurrentPositionListener); } }
    public bool hasAnyMouseCurrentPositionListener { get { return HasComponent(GameComponentsLookup.AnyMouseCurrentPositionListener); } }

    public void AddAnyMouseCurrentPositionListener(System.Collections.Generic.List<IAnyMouseCurrentPositionListener> newValue) {
        var index = GameComponentsLookup.AnyMouseCurrentPositionListener;
        var component = (AnyMouseCurrentPositionListenerComponent)CreateComponent(index, typeof(AnyMouseCurrentPositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyMouseCurrentPositionListener(System.Collections.Generic.List<IAnyMouseCurrentPositionListener> newValue) {
        var index = GameComponentsLookup.AnyMouseCurrentPositionListener;
        var component = (AnyMouseCurrentPositionListenerComponent)CreateComponent(index, typeof(AnyMouseCurrentPositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyMouseCurrentPositionListener() {
        RemoveComponent(GameComponentsLookup.AnyMouseCurrentPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyMouseCurrentPositionListener;

    public static Entitas.IMatcher<GameEntity> AnyMouseCurrentPositionListener {
        get {
            if (_matcherAnyMouseCurrentPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyMouseCurrentPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyMouseCurrentPositionListener = matcher;
            }

            return _matcherAnyMouseCurrentPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyMouseCurrentPositionListener(IAnyMouseCurrentPositionListener value) {
        var listeners = hasAnyMouseCurrentPositionListener
            ? anyMouseCurrentPositionListener.value
            : new System.Collections.Generic.List<IAnyMouseCurrentPositionListener>();
        listeners.Add(value);
        ReplaceAnyMouseCurrentPositionListener(listeners);
    }

    public void RemoveAnyMouseCurrentPositionListener(IAnyMouseCurrentPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyMouseCurrentPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyMouseCurrentPositionListener();
        } else {
            ReplaceAnyMouseCurrentPositionListener(listeners);
        }
    }
}
