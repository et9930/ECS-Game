//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pointNinjutsuMenuItemEntity { get { return GetGroup(GameMatcher.PointNinjutsuMenuItem).GetSingleEntity(); } }
    public PointNinjutsuMenuItemComponent pointNinjutsuMenuItem { get { return pointNinjutsuMenuItemEntity.pointNinjutsuMenuItem; } }
    public bool hasPointNinjutsuMenuItem { get { return pointNinjutsuMenuItemEntity != null; } }

    public GameEntity SetPointNinjutsuMenuItem(string newValue) {
        if (hasPointNinjutsuMenuItem) {
            throw new Entitas.EntitasException("Could not set PointNinjutsuMenuItem!\n" + this + " already has an entity with PointNinjutsuMenuItemComponent!",
                "You should check if the context already has a pointNinjutsuMenuItemEntity before setting it or use context.ReplacePointNinjutsuMenuItem().");
        }
        var entity = CreateEntity();
        entity.AddPointNinjutsuMenuItem(newValue);
        return entity;
    }

    public void ReplacePointNinjutsuMenuItem(string newValue) {
        var entity = pointNinjutsuMenuItemEntity;
        if (entity == null) {
            entity = SetPointNinjutsuMenuItem(newValue);
        } else {
            entity.ReplacePointNinjutsuMenuItem(newValue);
        }
    }

    public void RemovePointNinjutsuMenuItem() {
        pointNinjutsuMenuItemEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PointNinjutsuMenuItemComponent pointNinjutsuMenuItem { get { return (PointNinjutsuMenuItemComponent)GetComponent(GameComponentsLookup.PointNinjutsuMenuItem); } }
    public bool hasPointNinjutsuMenuItem { get { return HasComponent(GameComponentsLookup.PointNinjutsuMenuItem); } }

    public void AddPointNinjutsuMenuItem(string newValue) {
        var index = GameComponentsLookup.PointNinjutsuMenuItem;
        var component = (PointNinjutsuMenuItemComponent)CreateComponent(index, typeof(PointNinjutsuMenuItemComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePointNinjutsuMenuItem(string newValue) {
        var index = GameComponentsLookup.PointNinjutsuMenuItem;
        var component = (PointNinjutsuMenuItemComponent)CreateComponent(index, typeof(PointNinjutsuMenuItemComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePointNinjutsuMenuItem() {
        RemoveComponent(GameComponentsLookup.PointNinjutsuMenuItem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPointNinjutsuMenuItem;

    public static Entitas.IMatcher<GameEntity> PointNinjutsuMenuItem {
        get {
            if (_matcherPointNinjutsuMenuItem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PointNinjutsuMenuItem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPointNinjutsuMenuItem = matcher;
            }

            return _matcherPointNinjutsuMenuItem;
        }
    }
}
