//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyCurrentWeaponListenerComponent anyCurrentWeaponListener { get { return (AnyCurrentWeaponListenerComponent)GetComponent(GameComponentsLookup.AnyCurrentWeaponListener); } }
    public bool hasAnyCurrentWeaponListener { get { return HasComponent(GameComponentsLookup.AnyCurrentWeaponListener); } }

    public void AddAnyCurrentWeaponListener(System.Collections.Generic.List<IAnyCurrentWeaponListener> newValue) {
        var index = GameComponentsLookup.AnyCurrentWeaponListener;
        var component = (AnyCurrentWeaponListenerComponent)CreateComponent(index, typeof(AnyCurrentWeaponListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyCurrentWeaponListener(System.Collections.Generic.List<IAnyCurrentWeaponListener> newValue) {
        var index = GameComponentsLookup.AnyCurrentWeaponListener;
        var component = (AnyCurrentWeaponListenerComponent)CreateComponent(index, typeof(AnyCurrentWeaponListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyCurrentWeaponListener() {
        RemoveComponent(GameComponentsLookup.AnyCurrentWeaponListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyCurrentWeaponListener;

    public static Entitas.IMatcher<GameEntity> AnyCurrentWeaponListener {
        get {
            if (_matcherAnyCurrentWeaponListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyCurrentWeaponListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyCurrentWeaponListener = matcher;
            }

            return _matcherAnyCurrentWeaponListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyCurrentWeaponListener(IAnyCurrentWeaponListener value) {
        var listeners = hasAnyCurrentWeaponListener
            ? anyCurrentWeaponListener.value
            : new System.Collections.Generic.List<IAnyCurrentWeaponListener>();
        listeners.Add(value);
        ReplaceAnyCurrentWeaponListener(listeners);
    }

    public void RemoveAnyCurrentWeaponListener(IAnyCurrentWeaponListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyCurrentWeaponListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyCurrentWeaponListener();
        } else {
            ReplaceAnyCurrentWeaponListener(listeners);
        }
    }
}
